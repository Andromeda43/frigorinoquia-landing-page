---
// Hero.astro con estilos CSS directos
---

<section id="inicio" style="position: relative; height: 100vh; overflow: hidden;">
  <!-- Contenedor para el fondo (imagen) -->
  <div style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;">
    <img 
      src="/images/hero-bg.jpg" 
      alt="Vista aérea de Frigorinoquia" 
      style="width: 100%; height: 100%; object-fit: cover;"
    />
    
    <!-- Video de fondo (cargado con JavaScript) -->
    <div id="video-container" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; z-index: 10; opacity: 0; transition: opacity 0.5s ease-in-out;"></div>
    
    <!-- Overlay con gradiente -->
    <div style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; z-index: 20; background: linear-gradient(to right, rgba(30, 58, 138, 0.6), rgba(17, 24, 39, 0.5));"></div>
  </div>
  
  <!-- Contenido del Hero -->
  <div style="position: relative; height: 100%; z-index: 30; display: flex; align-items: center; justify-content: center; color: white; text-align: center;">
    <div style="max-width: 80rem; padding: 0 1rem;">
      <h1 style="font-size: clamp(2.25rem, 5vw, 3.75rem); font-weight: 700; margin-bottom: 1rem; text-shadow: 0 2px 4px rgba(0,0,0,0.2);" class="reveal-from-bottom">
        Calidad certificada para la industria cárnica del Casanare
      </h1>
      <p style="font-size: clamp(1.25rem, 2vw, 1.5rem); margin-bottom: 2rem; opacity: 0.9; text-shadow: 0 1px 2px rgba(0,0,0,0.1);" class="reveal-from-bottom">
        Bajo los más altos estándares del Decreto 1500
      </p>
      <div style="display: flex; flex-direction: column; gap: 1rem; justify-content: center; margin-bottom: 1rem;" class="reveal-from-bottom">
        <div style="display: flex; flex-direction: column; gap: 1rem; justify-content: center;">
          <a href="#contacto" style="display: inline-flex; align-items: center; justify-content: center; padding: 0.75rem 1.5rem; border-radius: 0.25rem; background-color: #1E3A8A; color: white; font-family: 'Montserrat', sans-serif; font-weight: 500; text-decoration: none; transition: background-color 0.3s;">Contáctanos</a>
          <a href="#nosotros" style="display: inline-flex; align-items: center; justify-content: center; padding: 0.75rem 1.5rem; border-radius: 0.25rem; background-color: transparent; border: 2px solid white; color: white; font-family: 'Montserrat', sans-serif; font-weight: 500; text-decoration: none; transition: background-color 0.3s;">Conócenos</a>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Flecha hacia abajo animada -->
  <div style="position: absolute; bottom: 2.5rem; left: 50%; transform: translateX(-50%); z-index: 30;">
    <a href="#nosotros" style="width: 2.5rem; height: 2.5rem; border-radius: 50%; border: 2px solid white; display: flex; align-items: center; justify-content: center; color: white; animation: bounce 2s infinite;">
      <span style="position: absolute; width: 1px; height: 1px; padding: 0; margin: -1px; overflow: hidden; clip: rect(0, 0, 0, 0); white-space: nowrap; border-width: 0;">Ir a la sección Nosotros</span>
      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="currentColor">
        <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
      </svg>
    </a>
  </div>
</section>

<style>
  @keyframes bounce {
    0%, 20%, 50%, 80%, 100% {
      transform: translateY(0);
    }
    40% {
      transform: translateY(-10px);
    }
    60% {
      transform: translateY(-5px);
    }
  }
  
  .reveal-from-bottom {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.6s ease, transform 0.6s ease;
  }
  
  .reveal-from-bottom.is-revealed {
    opacity: 1;
    transform: translateY(0);
  }
  
  @media (min-width: 640px) {
    #inicio div > div > div {
      flex-direction: row !important;
    }
  }
</style>

<script>
  // Función para detectar si es un dispositivo móvil o conexión lenta
  function isMobileOrSlowConnection() {
    // Verificar si es un dispositivo móvil
    const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
    
    // Verificar si la conexión es lenta (si está disponible la API)
    const connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection;
    const isSlowConnection = connection && 
      (connection.effectiveType === 'slow-2g' || 
       connection.effectiveType === '2g' || 
       connection.effectiveType === '3g' ||
       connection.saveData === true);
    
    return isMobile || isSlowConnection;
  }
  
  // Función para cargar video optimizado
  function loadBackgroundVideo() {
    const videoContainer = document.getElementById('video-container');
    if (!videoContainer) return;
    
    // No cargar video en móviles o conexiones lentas
    if (isMobileOrSlowConnection()) {
      console.log('Mobile or slow connection detected, skipping video loading');
      return;
    }
    
    // Crear elemento de video
    const video = document.createElement('video');
    video.autoplay = true;
    video.loop = true;
    video.muted = true;
    video.playsInline = true;
    video.style.width = '100%';
    video.style.height = '100%';
    video.style.objectFit = 'cover';
    
    // Optimizar para WebM primero, con fallback a MP4
    const webmSource = document.createElement('source');
    webmSource.src = '/videos/planta-aereo.webm';
    webmSource.type = 'video/webm';
    
    const mp4Source = document.createElement('source');
    mp4Source.src = '/videos/planta-aereo.mp4';
    mp4Source.type = 'video/mp4';
    
    // Eventos para manejar la carga y errores
    video.addEventListener('loadeddata', () => {
      console.log('Video loaded successfully');
      // Mostrar el video con una transición suave cuando esté listo
      videoContainer.style.opacity = '1';
    });
    
    video.addEventListener('error', (e) => {
      console.warn('Error al cargar el video de fondo, usando imagen de fondo', e);
    });
    
    // Añadir fuentes al video
    video.appendChild(webmSource);
    video.appendChild(mp4Source);
    
    // Añadir video al contenedor
    videoContainer.appendChild(video);
  }
  
  // Cargar el video cuando la ventana haya cargado
  window.addEventListener('load', loadBackgroundVideo);
  
  // Función para animar elementos al hacer scroll
  function initRevealOnScroll() {
    const revealElements = document.querySelectorAll('.reveal-from-bottom');
    
    function checkReveal() {
      revealElements.forEach(element => {
        const elementTop = element.getBoundingClientRect().top;
        const windowHeight = window.innerHeight;
        
        if (elementTop < windowHeight - 100) {
          element.classList.add('is-revealed');
        }
      });
    }
    
    // Comprobar al cargar la página
    checkReveal();
    
    // Comprobar al hacer scroll
    window.addEventListener('scroll', checkReveal);
  }
  
  // Iniciar animaciones al cargar
  document.addEventListener('DOMContentLoaded', initRevealOnScroll);
</script>